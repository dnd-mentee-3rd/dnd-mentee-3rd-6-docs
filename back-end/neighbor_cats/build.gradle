plugins {
	id 'org.springframework.boot' version '2.3.2.RELEASE'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id 'org.asciidoctor.convert' version '1.5.9'
	id 'java'
	id "com.moowork.node" version "1.3.1"
}

group = 'org.dnd3.udongsa'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('snippetsDir', file("build/generated-snippets"))
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	// developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'mysql:mysql-connector-java'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
	testImplementation 'org.springframework.security:spring-security-test'
	implementation 'org.mariadb.jdbc:mariadb-java-client:2.6.2'
	implementation 'io.jsonwebtoken:jjwt:0.9.1'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'com.github.ulisesbocchio:jasypt-spring-boot-starter:3.0.3'
	implementation "io.springfox:springfox-swagger2:2.9.2"
	implementation 'io.springfox:springfox-swagger-ui:2.9.2'
	// 파일 저장 관리 유틸
	implementation 'commons-io:commons-io:2.7'
	implementation 'org.apache.commons:commons-lang3:3.11'
	asciidoctor 'org.springframework.restdocs:spring-restdocs-asciidoctor:2.0.4.RELEASE'
	testImplementation "org.assertj:assertj-core:3.17.2"
	implementation 'org.modelmapper:modelmapper:2.3.8'
}

test {
	outputs.dir snippetsDir
	useJUnitPlatform()
}

asciidoctor {
	inputs.dir snippetsDir
	sourceDir 'src/doc/asciidoc'
	attributes \
    'snippets': file('build/generated-snippets')
	dependsOn test
}

bootJar {
  dependsOn asciidoctor
  from ("${asciidoctor.outputDir}/html5") {
    into 'static/docs'
  }
}

node {
  distBaseUrl = 'https://nodejs.org/dist'
  download = false
  npmWorkDir = file("../../front-end")
}

task appNpmInstall(type: NpmTask) {
    workingDir = file("../../front-end")
    args = ["install"]
}

task npmBuild(type: NpmTask) {
    workingDir = file("../../front-end")
    args = ['run', 'build:prod']
}

task copyToStatic(type: Copy) {
    delete "src/main/resources/static"
    from "../../front-end/build"
    into "${project.projectDir}/src/main/resources/static/."
}

npmBuild.dependsOn appNpmInstall
copyToStatic.dependsOn npmBuild
compileJava.dependsOn copyToStatic